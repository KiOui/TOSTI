version: "3.6"

services:
  yivi:
    image: ghcr.io/privacybydesign/irma:edge
    command: >
      server -v --requestors '{"tosti": {"auth_method": "token", "key": "${YIVI_SERVER_TOKEN}"}}' --production --no-email --url ${YIVI_SERVER_URL} --port 80
    restart: unless-stopped
    networks:
      - web
    environment:
      YIVI_SERVER_URL: https://yivi.tosti.science.ru.nl
      YIVI_SERVER_TOKEN: ${YIVI_SERVER_TOKEN}

  database:
    image: postgres:13.3-alpine
    restart: unless-stopped
    networks:
      - db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    image: ghcr.io/kioui/tosti:latest
    restart: unless-stopped
    networks:
      - web
      - db
    expose: 
      - "80"
    depends_on:
      - database
      - yivi
    volumes:
      - media:/media
    environment:
      POSTGRES_USER: tosti
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: tosti
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_ALLOWED_HOSTS: tosti.science.ru.nl,new.tosti.science.ru.nl
      SENTRY_DSN: ${SENTRY_DSN}
      YIVI_SERVER_URL: https://yivi.tosti.science.ru.nl
      YIVI_SERVER_TOKEN: ${YIVI_SERVER_TOKEN}
      SAML_ENTITY_ID: tosti.science.ru.nl
      SAML_BASE_URL: https://tosti.science.ru.nl
      SAML_METADATA_FILE: ${SAML_METADATA_FILE}
      SAML_PUBLIC_KEY_FILE: ${SAML_PUBLIC_KEY_FILE}
      SAML_PRIVATE_KEY_FILE: ${SAML_PRIVATE_KEY_FILE}
      EMAIL_HOST: smtp.science.ru.nl
      EMAIL_PORT: 25
      EMAIL_DEFAULT_SENDER: "www-tosti@science.ru.nl"
      EMAIL_HOST_USER: "www-tosti@science.ru.nl"
      DEFAULT_FROM_EMAIL: "TOSTI <www-tosti@science.ru.nl>"
      SERVER_EMAIL: "www-tosti@science.ru.nl"

    healthcheck:
      test: ["CMD", "python", "manage.py", "check"]
      interval: 10s
      timeout: 5s
      retries: 5

  cron:
    image: ghcr.io/kioui/tosti:latest
    entrypoint: ["/bin/sh", "/entrypoint_cron.sh"]
    restart: unless-stopped
    networks:
      - web
      - db
    depends_on:
      - database
      - yivi
    volumes:
      - media:/media
    environment:
      POSTGRES_USER: tosti
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: tosti
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}

networks:
  web:
    external: true
    name: caddy_reverseproxy
  db:

volumes:
  postgres-data:
  media:
